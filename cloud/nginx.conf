worker_processes  auto;

events {
    worker_connections  1024;
}
 
http { 
    default_type application/octet-stream;

    #access_log off;
    #error_log off;

    # HTTPS certificate and key
    #ssl_certificate /etc/ssl/camera_certs/server.crt;
    #ssl_certificate_key /etc/ssl/camera_certs/server.key;

    # Cache for internal auth checks
    proxy_cache_path /var/cache/nginx/auth levels=1:2 keys_zone=auth_cache:10m max_size=128m inactive=10m use_temp_path=off;

    server { 
        listen 80; // 443 ssl

        location ~ ^/live/hls/(?<token>.*)/(?<file>.*) {
            #auth_request /auth; # TODO enable
            add_header 'Access-Control-Allow-Origin' '*' always;

            # Rewrite the request without the token
            alias /var/www/hls/$file;
        }

        location = /auth {
            internal;
            proxy_cache             auth_cache;
            proxy_cache_methods     GET HEAD POST;
            proxy_cache_key         "$cookie_token";
            # Valid tokens cache duration is set by backend returning a properly set Cache-Control header
            # Invalid tokens are shortly cached to protect backend but not flood Nginx cache
            proxy_cache_valid       401 30s;
            # Valid tokens are cached for 5 minutes so we can get the backend to re-validate them from time to time
            proxy_cache_valid       200 5s; # change!!!

            #proxy_set_header        Host ........;
            proxy_pass_request_body off;
            proxy_set_header        Content-Length "";
            proxy_set_header        Accept application/json;
           
            proxy_pass "http://192.168.0.65:8087/authenticate?token=$token";
            proxy_set_header        X-Original-URI $request_uri;
        }

 
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
            text/html html;
        }
    } 
}